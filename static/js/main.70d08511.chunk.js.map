{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","changeSortType","isReversed","toggleReverse","handleSortingType","type","preparedGoods","goods","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","showResetButton","className","classNames","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAmCC,mBAASH,EAASI,MAArD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAMMC,EAAoB,SAACC,GACzBJ,EAAeI,IAQXC,EA3CD,SACLC,EADK,GAGJ,IADCP,EACF,EADEA,SAAUE,EACZ,EADYA,WAENM,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQX,GACN,KAAKL,EAASiB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITb,GACFM,EAAaQ,UAGRR,EAoBeS,CACpBrB,EACA,CACEM,aACAF,aAGEkB,EAAkBlB,IAAaL,EAASI,MAAQG,EAEtD,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEd,KAAK,SACLc,UAAWC,IACT,iBAAkB,CAAE,WAAYpB,IAAaL,EAASiB,WAExDS,QAAS,WACPjB,EAAkBT,EAASiB,WAN/B,iCAYA,wBACEP,KAAK,SACLc,UAAWC,IACT,oBAAqB,CAAE,WAAYpB,IAAaL,EAASmB,SAE3DO,QAAS,WACPjB,EAAkBT,EAASmB,SAN/B,4BAYA,wBACET,KAAK,SACLc,UAAWC,IACT,oBAAqB,CAAE,YAAalB,IAEtCmB,QAtDQ,WACdlB,GAAc,SAAAmB,GAAO,OAAKA,MAgDtB,qBAUCJ,GACC,wBACEb,KAAK,SACLc,UAAU,4BACVE,QAvDa,WACrBpB,EAAeN,EAASI,MACxBI,GAAc,IAkDR,sBAUJ,6BACE,6BACGG,EAAciB,KAAI,SAAAC,GAAI,OACrB,oBACE,UAAQ,OADV,SAIGA,GAFIA,cCnInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.70d08511.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, changeSortType] = useState(SortType.NONE);\n  const [isReversed, toggleReverse] = useState(false);\n\n  const reverse = () => {\n    toggleReverse(current => !current);\n  };\n\n  const handleSortingType = (type: SortType) => {\n    changeSortType(type);\n  };\n\n  const resetToDefault = () => {\n    changeSortType(SortType.NONE);\n    toggleReverse(false);\n  };\n\n  const preparedGoods = getReorderedGoods(\n    goodsFromServer,\n    {\n      isReversed,\n      sortType,\n    },\n  );\n  const showResetButton = sortType !== SortType.NONE || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info', { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => {\n            handleSortingType(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success', { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => {\n            handleSortingType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning', { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {showResetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetToDefault}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {preparedGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}